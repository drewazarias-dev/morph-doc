"use strict";(self.webpackChunkmorph_doc=self.webpackChunkmorph_doc||[]).push([[8324],{9415:(r,e,n)=>{n.r(e),n.d(e,{assets:()=>c,contentTitle:()=>i,default:()=>h,frontMatter:()=>d,metadata:()=>t,toc:()=>l});var o=n(6070),s=n(1582);const d={},i="Function: asL2Provider()",t={id:"build-on-morph/sdk/functions/asL2Provider",title:"asL2Provider",description:"@morph-l2/sdk \u2022 Docs",source:"@site/docs/build-on-morph/sdk/functions/asL2Provider.md",sourceDirName:"build-on-morph/sdk/functions",slug:"/build-on-morph/sdk/functions/asL2Provider",permalink:"/docs/build-on-morph/sdk/functions/asL2Provider",draft:!1,unlisted:!1,editUrl:"https://github.com/morph-l2/morph-doc/tree/main/docs/build-on-morph/sdk/functions/asL2Provider.md",tags:[],version:"current",frontMatter:{}},c={},l=[{value:"Type parameters",id:"type-parameters",level:2},{value:"Parameters",id:"parameters",level:2},{value:"Returns",id:"returns",level:2},{value:"Source",id:"source",level:2}];function a(r){const e={a:"a",blockquote:"blockquote",code:"code",em:"em",h1:"h1",h2:"h2",hr:"hr",p:"p",strong:"strong",...(0,s.R)(),...r.components};return(0,o.jsxs)(o.Fragment,{children:[(0,o.jsxs)(e.p,{children:[(0,o.jsx)(e.a,{href:"/docs/build-on-morph/sdk/globals",children:(0,o.jsx)(e.strong,{children:"@morph-l2/sdk"})})," \u2022 ",(0,o.jsx)(e.strong,{children:"Docs"})]}),"\n",(0,o.jsx)(e.hr,{}),"\n",(0,o.jsxs)(e.p,{children:[(0,o.jsx)(e.a,{href:"/docs/build-on-morph/sdk/globals",children:"@morph-l2/sdk"})," / asL2Provider"]}),"\n",(0,o.jsx)(e.h1,{id:"function-asl2provider",children:"Function: asL2Provider()"}),"\n",(0,o.jsxs)(e.blockquote,{children:["\n",(0,o.jsxs)(e.p,{children:[(0,o.jsx)(e.strong,{children:"asL2Provider"}),"<",(0,o.jsx)(e.code,{children:"TProvider"}),">(",(0,o.jsx)(e.code,{children:"provider"}),"): ",(0,o.jsx)(e.a,{href:"/docs/build-on-morph/sdk/type-aliases/L2Provider",children:(0,o.jsx)(e.code,{children:"L2Provider"})}),"<",(0,o.jsx)(e.code,{children:"TProvider"}),">"]}),"\n"]}),"\n",(0,o.jsx)(e.p,{children:"Returns an provider wrapped as an Morph L2 provider. Adds a few extra helper functions to\nsimplify the process of estimating the gas usage for a transaction on Morph. Returns a COPY\nof the original provider."}),"\n",(0,o.jsx)(e.h2,{id:"type-parameters",children:"Type parameters"}),"\n",(0,o.jsxs)(e.p,{children:["\u2022 ",(0,o.jsx)(e.strong,{children:"TProvider"})," ",(0,o.jsx)(e.em,{children:"extends"})," ",(0,o.jsx)(e.code,{children:"Provider"}),"<",(0,o.jsx)(e.code,{children:"TProvider"}),">"]}),"\n",(0,o.jsx)(e.h2,{id:"parameters",children:"Parameters"}),"\n",(0,o.jsxs)(e.p,{children:["\u2022 ",(0,o.jsx)(e.strong,{children:"provider"}),": ",(0,o.jsx)(e.code,{children:"TProvider"})]}),"\n",(0,o.jsx)(e.p,{children:"Provider to wrap into an L2 provider."}),"\n",(0,o.jsx)(e.h2,{id:"returns",children:"Returns"}),"\n",(0,o.jsxs)(e.p,{children:[(0,o.jsx)(e.a,{href:"/docs/build-on-morph/sdk/type-aliases/L2Provider",children:(0,o.jsx)(e.code,{children:"L2Provider"})}),"<",(0,o.jsx)(e.code,{children:"TProvider"}),">"]}),"\n",(0,o.jsx)(e.p,{children:"Provider wrapped as an L2 provider."}),"\n",(0,o.jsx)(e.h2,{id:"source",children:"Source"}),"\n",(0,o.jsx)(e.p,{children:"src/l2-provider.ts:171"})]})}function h(r={}){const{wrapper:e}={...(0,s.R)(),...r.components};return e?(0,o.jsx)(e,{...r,children:(0,o.jsx)(a,{...r})}):a(r)}},1582:(r,e,n)=>{n.d(e,{R:()=>i,x:()=>t});var o=n(758);const s={},d=o.createContext(s);function i(r){const e=o.useContext(d);return o.useMemo((function(){return"function"==typeof r?r(e):{...e,...r}}),[e,r])}function t(r){let e;return e=r.disableParentContext?"function"==typeof r.components?r.components(s):r.components||s:i(r.components),o.createElement(d.Provider,{value:e},r.children)}}}]);