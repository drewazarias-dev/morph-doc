"use strict";(self.webpackChunkmorph_doc=self.webpackChunkmorph_doc||[]).push([[3046],{7237:(e,o,n)=>{n.r(o),n.d(o,{assets:()=>h,contentTitle:()=>d,default:()=>p,frontMatter:()=>s,metadata:()=>i,toc:()=>a});var t=n(6070),r=n(1582);const s={title:"Upgrade node running on the host",lang:"en-US"},d=void 0,i={id:"build-on-morph/developer-resources/node-operation/upgrade-node/upgrade-node-host",title:"Upgrade node running on the host",description:"Upgrading the node is straightforward. Simply install the new version of the node executable file and replace the previous version. Then, stop the currently running node and restart it with the updated version. Node will automatically use the data of your old node and sync the latest blocks that were mined since you shut down the old software.",source:"@site/docs/build-on-morph/developer-resources/node-operation/upgrade-node/1-upgrade-node-host.md",sourceDirName:"build-on-morph/developer-resources/node-operation/upgrade-node",slug:"/build-on-morph/developer-resources/node-operation/upgrade-node/upgrade-node-host",permalink:"/docs/build-on-morph/developer-resources/node-operation/upgrade-node/upgrade-node-host",draft:!1,unlisted:!1,editUrl:"https://github.com/morph-l2/morph-doc/tree/main/docs/build-on-morph/developer-resources/node-operation/upgrade-node/1-upgrade-node-host.md",tags:[],version:"current",sidebarPosition:1,frontMatter:{title:"Upgrade node running on the host",lang:"en-US"},sidebar:"DeveloperSidebar",previous:{title:"Upgrade node running from docker",permalink:"/docs/build-on-morph/developer-resources/node-operation/upgrade-node/upgrade-node-docker"},next:{title:"Prune State",permalink:"/docs/build-on-morph/developer-resources/node-operation/prune-state"}},h={},a=[{value:"Step1: Compile the new version of the code",id:"step1-compile-the-new-version-of-the-code",level:3},{value:"If you only update the Geth version",id:"if-you-only-update-the-geth-version",level:4},{value:"Step2: Stop nodes",id:"step2-stop-nodes",level:3},{value:"Step3: Restart",id:"step3-restart",level:3}];function l(e){const o={a:"a",admonition:"admonition",code:"code",h3:"h3",h4:"h4",p:"p",pre:"pre",...(0,r.R)(),...e.components};return(0,t.jsxs)(t.Fragment,{children:[(0,t.jsx)(o.p,{children:"Upgrading the node is straightforward. Simply install the new version of the node executable file and replace the previous version. Then, stop the currently running node and restart it with the updated version. Node will automatically use the data of your old node and sync the latest blocks that were mined since you shut down the old software."}),"\n",(0,t.jsxs)(o.p,{children:["Running the node requires two binary files: ",(0,t.jsx)(o.code,{children:"morphnode"})," and ",(0,t.jsx)(o.code,{children:"geth"}),". Choose to upgrade the binary files according to your specific needs."]}),"\n",(0,t.jsx)(o.h3,{id:"step1-compile-the-new-version-of-the-code",children:"Step1: Compile the new version of the code"}),"\n",(0,t.jsxs)(o.p,{children:["You can have the released code version from ",(0,t.jsx)(o.a,{href:"https://github.com/morph-l2/morph/releases",children:"Morph release"})," page."]}),"\n",(0,t.jsx)(o.pre,{children:(0,t.jsx)(o.code,{className:"language-js",children:"git clone https://github.com/morph-l2/morph.git\n\n// checkout the latest version of the source code you need\ngit checkout ${latestVersion}\n\n// install geth\nmake geth\n\n// install morphnode\ncd ./morph/node && make build\n"})}),"\n",(0,t.jsx)(o.h4,{id:"if-you-only-update-the-geth-version",children:"If you only update the Geth version"}),"\n",(0,t.jsxs)(o.p,{children:["Check the ",(0,t.jsx)(o.code,{children:"Geth"})," version from ",(0,t.jsx)(o.a,{href:"https://github.com/morph-l2/go-ethereum/releases",children:"go-ethereum"})]}),"\n",(0,t.jsx)(o.pre,{children:(0,t.jsx)(o.code,{className:"language-js",children:"git clone https://github.com/morph-l2/go-ethereum.git\n\ngit checkout ${latestVersion}\n\n// install geth\nmake geth\n"})}),"\n",(0,t.jsx)(o.h3,{id:"step2-stop-nodes",children:"Step2: Stop nodes"}),"\n",(0,t.jsx)(o.pre,{children:(0,t.jsx)(o.code,{className:"language-bash",children:"# stop morphnode process\npid=`ps -ef | grep morphnode | grep -v grep | awk '{print $2}'`\nkill  $pid\n\n# stop geth process\npid=`ps -ef | grep geth | grep -v grep | awk '{print $2}'`\nkill  $pid\n"})}),"\n",(0,t.jsx)(o.h3,{id:"step3-restart",children:"Step3: Restart"}),"\n",(0,t.jsx)(o.p,{children:"Make sure to use the same start-up command you used before the upgrade"}),"\n",(0,t.jsx)(o.pre,{children:(0,t.jsx)(o.code,{className:"language-bash",children:'## start geth\n./morph/go-ethereum/build/bin/geth --morph \\\n    --datadir "./geth-data" \\\n    --http --http.api=web3,debug,eth,txpool,net,engine \\\n    --authrpc.addr localhost \\\n    --authrpc.vhosts="localhost" \\\n    --authrpc.port 8551 \\\n    --authrpc.jwtsecret=./jwt-secret.txt \\\n    --log.filename=./geth.log\n\n## start node    \n./morph/node/build/bin/morphnode --home ./node-data \\\n     --l2.jwt-secret ./jwt-secret.txt \\\n     --l2.eth http://localhost:8545 \\\n     --l2.engine http://localhost:8551 \\\n     --log.filename ./node.log \n'})}),"\n",(0,t.jsx)(o.admonition,{type:"note",children:(0,t.jsxs)(o.p,{children:["For holesky network, use ",(0,t.jsx)(o.code,{children:"--morph-holesky"})," instead"]})})]})}function p(e={}){const{wrapper:o}={...(0,r.R)(),...e.components};return o?(0,t.jsx)(o,{...e,children:(0,t.jsx)(l,{...e})}):l(e)}},1582:(e,o,n)=>{n.d(o,{R:()=>d,x:()=>i});var t=n(758);const r={},s=t.createContext(r);function d(e){const o=t.useContext(s);return t.useMemo((function(){return"function"==typeof e?e(o):{...o,...e}}),[o,e])}function i(e){let o;return o=e.disableParentContext?"function"==typeof e.components?e.components(r):e.components||r:d(e.components),t.createElement(s.Provider,{value:o},e.children)}}}]);