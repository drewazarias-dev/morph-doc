"use strict";(self.webpackChunkmorph_doc=self.webpackChunkmorph_doc||[]).push([[8898],{9903:(e,r,n)=>{n.r(r),n.d(r,{assets:()=>c,contentTitle:()=>d,default:()=>p,frontMatter:()=>i,metadata:()=>t,toc:()=>l});var s=n(6070),o=n(1582);const i={},d="Function: isL2Provider()",t={id:"build-on-morph/sdk/functions/isL2Provider",title:"isL2Provider",description:"@morph-l2/sdk \u2022 Docs",source:"@site/docs/build-on-morph/sdk/functions/isL2Provider.md",sourceDirName:"build-on-morph/sdk/functions",slug:"/build-on-morph/sdk/functions/isL2Provider",permalink:"/docs/build-on-morph/sdk/functions/isL2Provider",draft:!1,unlisted:!1,editUrl:"https://github.com/morph-l2/morph-doc/tree/main/docs/build-on-morph/sdk/functions/isL2Provider.md",tags:[],version:"current",frontMatter:{}},c={},l=[{value:"Type parameters",id:"type-parameters",level:2},{value:"Parameters",id:"parameters",level:2},{value:"Returns",id:"returns",level:2},{value:"Example",id:"example",level:2},{value:"Source",id:"source",level:2}];function h(e){const r={a:"a",blockquote:"blockquote",code:"code",em:"em",h1:"h1",h2:"h2",hr:"hr",p:"p",pre:"pre",strong:"strong",...(0,o.R)(),...e.components};return(0,s.jsxs)(s.Fragment,{children:[(0,s.jsxs)(r.p,{children:[(0,s.jsx)(r.a,{href:"/docs/build-on-morph/sdk/globals",children:(0,s.jsx)(r.strong,{children:"@morph-l2/sdk"})})," \u2022 ",(0,s.jsx)(r.strong,{children:"Docs"})]}),"\n",(0,s.jsx)(r.hr,{}),"\n",(0,s.jsxs)(r.p,{children:[(0,s.jsx)(r.a,{href:"/docs/build-on-morph/sdk/globals",children:"@morph-l2/sdk"})," / isL2Provider"]}),"\n",(0,s.jsx)(r.h1,{id:"function-isl2provider",children:"Function: isL2Provider()"}),"\n",(0,s.jsxs)(r.blockquote,{children:["\n",(0,s.jsxs)(r.p,{children:[(0,s.jsx)(r.strong,{children:"isL2Provider"}),"<",(0,s.jsx)(r.code,{children:"TProvider"}),">(",(0,s.jsx)(r.code,{children:"provider"}),"): ",(0,s.jsx)(r.code,{children:"provider is L2Provider<TProvider>"})]}),"\n"]}),"\n",(0,s.jsx)(r.p,{children:"Determines if a given Provider is an L2Provider.  Will coerce type\nif true"}),"\n",(0,s.jsx)(r.h2,{id:"type-parameters",children:"Type parameters"}),"\n",(0,s.jsxs)(r.p,{children:["\u2022 ",(0,s.jsx)(r.strong,{children:"TProvider"})," ",(0,s.jsx)(r.em,{children:"extends"})," ",(0,s.jsx)(r.code,{children:"Provider"}),"<",(0,s.jsx)(r.code,{children:"TProvider"}),">"]}),"\n",(0,s.jsx)(r.h2,{id:"parameters",children:"Parameters"}),"\n",(0,s.jsxs)(r.p,{children:["\u2022 ",(0,s.jsx)(r.strong,{children:"provider"}),": ",(0,s.jsx)(r.code,{children:"TProvider"})]}),"\n",(0,s.jsx)(r.p,{children:"The provider to check"}),"\n",(0,s.jsx)(r.h2,{id:"returns",children:"Returns"}),"\n",(0,s.jsx)(r.p,{children:(0,s.jsx)(r.code,{children:"provider is L2Provider<TProvider>"})}),"\n",(0,s.jsx)(r.p,{children:"Boolean"}),"\n",(0,s.jsx)(r.h2,{id:"example",children:"Example"}),"\n",(0,s.jsx)(r.pre,{children:(0,s.jsx)(r.code,{className:"language-ts",children:"if (isL2Provider(provider)) {\n  // typescript now knows it is of type L2Provider\n  const gasPrice = await provider.estimateL2GasPrice(tx)\n}\n"})}),"\n",(0,s.jsx)(r.h2,{id:"source",children:"Source"}),"\n",(0,s.jsx)(r.p,{children:"src/l2-provider.ts:157"})]})}function p(e={}){const{wrapper:r}={...(0,o.R)(),...e.components};return r?(0,s.jsx)(r,{...e,children:(0,s.jsx)(h,{...e})}):h(e)}},1582:(e,r,n)=>{n.d(r,{R:()=>d,x:()=>t});var s=n(758);const o={},i=s.createContext(o);function d(e){const r=s.useContext(i);return s.useMemo((function(){return"function"==typeof e?e(r):{...r,...e}}),[r,e])}function t(e){let r;return r=e.disableParentContext?"function"==typeof e.components?e.components(o):e.components||o:d(e.components),s.createElement(i.Provider,{value:r},e.children)}}}]);