"use strict";(self.webpackChunkmorph_doc=self.webpackChunkmorph_doc||[]).push([[4305],{8802:(e,t,n)=>{n.r(t),n.d(t,{assets:()=>c,contentTitle:()=>r,default:()=>h,frontMatter:()=>s,metadata:()=>a,toc:()=>l});var i=n(6070),o=n(1582);const s={title:"Understand Transaction Cost on Morph",lang:"en-US",keywords:["morph","ethereum","rollup","layer2","validity proof","optimistic zk-rollup"],description:"Upgrade your blockchain experience with Morph - the secure decentralized, cost0efficient, and high-performing optimistic zk-rollup solution. Try it now!"},r=void 0,a={id:"build-on-morph/build-on-morph/understand-transaction-cost-on-morph",title:"Understand Transaction Cost on Morph",description:"Upgrade your blockchain experience with Morph - the secure decentralized, cost0efficient, and high-performing optimistic zk-rollup solution. Try it now!",source:"@site/docs/build-on-morph/build-on-morph/4-understand-transaction-cost-on-morph.md",sourceDirName:"build-on-morph/build-on-morph",slug:"/build-on-morph/build-on-morph/understand-transaction-cost-on-morph",permalink:"/docs/build-on-morph/build-on-morph/understand-transaction-cost-on-morph",draft:!1,unlisted:!1,editUrl:"https://github.com/morph-l2/morph-doc/tree/main/docs/build-on-morph/build-on-morph/4-understand-transaction-cost-on-morph.md",tags:[],version:"current",sidebarPosition:4,frontMatter:{title:"Understand Transaction Cost on Morph",lang:"en-US",keywords:["morph","ethereum","rollup","layer2","validity proof","optimistic zk-rollup"],description:"Upgrade your blockchain experience with Morph - the secure decentralized, cost0efficient, and high-performing optimistic zk-rollup solution. Try it now!"},sidebar:"DeveloperSidebar",previous:{title:"Difference between Morph and Ethereum",permalink:"/docs/how-morph-works/general-protocol-design/difference-between-ethereum-and-morph"},next:{title:"Morph Integration One Page",permalink:"/docs/build-on-morph/build-on-morph/integration-one-page"}},c={},l=[{value:"The L2 execution fee",id:"the-l2-execution-fee",level:2},{value:"The L1 data fee",id:"the-l1-data-fee",level:2},{value:"Transaction fees&#39; effect on software development",id:"transaction-fees-effect-on-software-development",level:2},{value:"Sending transactions",id:"sending-transactions",level:3},{value:"Displaying fees to users",id:"displaying-fees-to-users",level:3},{value:"Estimating the L2 execution fee",id:"estimating-the-l2-execution-fee",level:4},{value:"Estimating the L1 data fee",id:"estimating-the-l1-data-fee",level:4},{value:"Estimating the total fee",id:"estimating-the-total-fee",level:4},{value:"Sending max ETH",id:"sending-max-eth",level:3},{value:"Common RPC Errors",id:"common-rpc-errors",level:2},{value:"Insufficient funds",id:"insufficient-funds",level:3},{value:"Gas price too low",id:"gas-price-too-low",level:3},{value:"Gas price too high",id:"gas-price-too-high",level:3}];function d(e){const t={a:"a",admonition:"admonition",code:"code",h2:"h2",h3:"h3",h4:"h4",li:"li",ol:"ol",p:"p",pre:"pre",strong:"strong",ul:"ul",...(0,o.R)(),...e.components};return(0,i.jsxs)(i.Fragment,{children:[(0,i.jsx)(t.p,{children:"Transaction fees on Morph work similarly to fees on Ethereum. However, Layer 2 introduces some unique aspects. Morph's optimistic zkEVM makes these differences easy to understand and even easier to handle."}),"\n",(0,i.jsx)(t.p,{children:"This page includes the formula for calculating the gas cost of transactions on Morph.\nThere are two kinds of costs for transactions on Morph: the L2 execution fee and the L1 data/security fee."}),"\n",(0,i.jsx)(t.h2,{id:"the-l2-execution-fee",children:"The L2 execution fee"}),"\n",(0,i.jsx)(t.p,{children:"Like Ethereum, transactions on Morph incur gas costs for computation and storage usage."}),"\n",(0,i.jsxs)(t.p,{children:["Every L2 transaction will pay some ",(0,i.jsx)(t.strong,{children:"execution"})," fee, equal to the amount of gas used multiplied by the gas price of the transaction."]}),"\n",(0,i.jsx)(t.p,{children:"Morph supports EIP-1559 transaction type. The EIP-1559 pricing model, which comprises a base fee and a priority fee, contributes to a more predictable and stable transaction fee."}),"\n",(0,i.jsx)(t.p,{children:"The formula is straightforward:"}),"\n",(0,i.jsx)(t.pre,{children:(0,i.jsx)(t.code,{children:"l2_execution_fee = l2_gas_price * l2_gas_used\nl2_gas_price = l2_base_fee + l2_priority_fee\n"})}),"\n",(0,i.jsx)(t.p,{children:"The amount of L2 gas used depends on the specific transaction. Due to EVM compatibility, gas usage on Morph is typically similar to Ethereum."}),"\n",(0,i.jsx)(t.h2,{id:"the-l1-data-fee",children:"The L1 data fee"}),"\n",(0,i.jsx)(t.p,{children:"Morph transactions are also published to Ethereum, crucial to Morph\u2019s security as it ensures all data needed to verify Morph's state is always publicly available on Ethereum."}),"\n",(0,i.jsx)(t.p,{children:"Users must pay for the cost of submitting their transactions to Ethereum, known as the L1 data fee. This fee typically represents most of the total cost of a transaction on Morph."}),"\n",(0,i.jsx)(t.p,{children:"Formula:"}),"\n",(0,i.jsx)(t.pre,{children:(0,i.jsx)(t.code,{children:"l1DataFee = (l1BaseFee * commitScalar + l1BlobBaseFee * len(tx_data) * blobScalar) / rcfg.Precision\n"})}),"\n",(0,i.jsx)(t.pre,{children:(0,i.jsx)(t.code,{children:"len(tx_data) = count_zero_bytes(tx_data) * 4 + count_non_zero_bytes(tx_data) * 16\n"})}),"\n",(0,i.jsx)(t.p,{children:"And other parameters:"}),"\n",(0,i.jsxs)(t.ol,{children:["\n",(0,i.jsx)(t.li,{children:"l1BaseFee\uff1aLayer1 base fee"}),"\n",(0,i.jsx)(t.li,{children:"commitScalar: a factor used to measure the gas cost for data commitment"}),"\n",(0,i.jsx)(t.li,{children:"l1BlobBaseFee: the blobBaseFee on L1"}),"\n",(0,i.jsx)(t.li,{children:"blobScalar: a factor used to measure the gas cost for one transaction to be stored in EIP-4844 blob"}),"\n"]}),"\n",(0,i.jsx)(t.admonition,{type:"tip",children:(0,i.jsxs)(t.p,{children:["You can read the parameter values from the GasPrice oracle contract. Morph has pre-deployed ",(0,i.jsx)(t.code,{children:"GasPriceOracle"}),", accessible on Morph mainnet at ",(0,i.jsx)(t.a,{href:"https://explorer.morphl2.io/address/0x530000000000000000000000000000000000000f",children:"GasPriceOracle"}),"."]})}),"\n",(0,i.jsx)(t.h2,{id:"transaction-fees-effect-on-software-development",children:"Transaction fees' effect on software development"}),"\n",(0,i.jsx)(t.h3,{id:"sending-transactions",children:"Sending transactions"}),"\n",(0,i.jsx)(t.p,{children:"The process of sending a transaction on Morph is identical to sending a transaction on Ethereum."}),"\n",(0,i.jsx)(t.p,{children:"When sending a transaction, you should provide a gas price that is greater than or equal to the current L2 gas price."}),"\n",(0,i.jsxs)(t.p,{children:["Like on Ethereum, you can query this gas price with the ",(0,i.jsx)(t.code,{children:"eth_gasPrice"})," RPC method."]}),"\n",(0,i.jsxs)(t.p,{children:["Similarly, you should set your transaction gas limit in the same way that you would set it on Ethereum (e.g. via ",(0,i.jsx)(t.code,{children:"eth_estimateGas"}),")."]}),"\n",(0,i.jsx)(t.h3,{id:"displaying-fees-to-users",children:"Displaying fees to users"}),"\n",(0,i.jsx)(t.p,{children:"Many Ethereum applications display estimated fees to users by multiplying the gas price by the gas limit."}),"\n",(0,i.jsx)(t.p,{children:"However, as discussed earlier, users on Morph are charged both an L2 execution fee and an L1 data fee."}),"\n",(0,i.jsx)(t.p,{children:"As a result, you should display the sum of both of these fees to give users the most accurate estimate of the total cost of a transaction."}),"\n",(0,i.jsx)(t.h4,{id:"estimating-the-l2-execution-fee",children:"Estimating the L2 execution fee"}),"\n",(0,i.jsx)(t.p,{children:"You can estimate the L2 execution fee by multiplying the gas price by the gas used, just like on Ethereum."}),"\n",(0,i.jsx)(t.p,{children:"The formula is straightforward:"}),"\n",(0,i.jsx)(t.pre,{children:(0,i.jsx)(t.code,{children:"l2_execution_fee = l2_gas_price * l2_gas_used\nl2_gas_price = l2_base_fee + l2_priority_fee\n"})}),"\n",(0,i.jsx)(t.p,{children:"The amount of L2 gas used depends on the specific transaction. Due to EVM compatibility, gas usage on Morph is typically similar to Ethereum."}),"\n",(0,i.jsx)(t.h4,{id:"estimating-the-l1-data-fee",children:"Estimating the L1 data fee"}),"\n",(0,i.jsxs)(t.p,{children:["You can utilize the pre-deployed ",(0,i.jsx)(t.code,{children:"L1GasPriceOracle"})," at ",(0,i.jsx)(t.code,{children:"0x530000000000000000000000000000000000000f"}),". It offers a ",(0,i.jsx)(t.code,{children:"getL1Fee"})," method to estimate the L1 data fee for the raw data of a given transaction."]}),"\n",(0,i.jsx)(t.pre,{children:(0,i.jsx)(t.code,{className:"language-javascript",children:"function getL1Fee(bytes memory _data) external view override returns (uint256);\n"})}),"\n",(0,i.jsxs)(t.admonition,{type:"tip",children:[(0,i.jsx)(t.p,{children:"Once the sequencer has processed a transaction, a user's L1 fee is secured, and any fluctuations will not impact what a user pays."}),(0,i.jsx)(t.p,{children:"Due to Morph's ~1s block time, any changes in L1 gas between a transaction's submission and its inclusion in a block should be minimal. The sequencer will account for any variations in L1 gas costs between a transaction's inclusion in a block and when the sequencer commits the data to L1."})]}),"\n",(0,i.jsx)(t.h4,{id:"estimating-the-total-fee",children:"Estimating the total fee"}),"\n",(0,i.jsx)(t.p,{children:"You can estimate the total fee by combining your estimates for the L2 execution fee and L1 data fee."}),"\n",(0,i.jsx)(t.h3,{id:"sending-max-eth",children:"Sending max ETH"}),"\n",(0,i.jsx)(t.p,{children:"Sending the maximum amount of ETH that a user has in their wallet is a relatively common use case."}),"\n",(0,i.jsx)(t.p,{children:"When doing this, you will need to subtract the estimated L2 execution fee and the estimated L1 data fee from the amount of ETH you want the user to send."}),"\n",(0,i.jsx)(t.p,{children:"Use the logic described above for estimating the total fee."}),"\n",(0,i.jsx)(t.h2,{id:"common-rpc-errors",children:"Common RPC Errors"}),"\n",(0,i.jsx)(t.h3,{id:"insufficient-funds",children:"Insufficient funds"}),"\n",(0,i.jsxs)(t.ul,{children:["\n",(0,i.jsxs)(t.li,{children:["Error code: ",(0,i.jsx)(t.code,{children:"-32000"})]}),"\n",(0,i.jsxs)(t.li,{children:["Error message: ",(0,i.jsx)(t.code,{children:"invalid transaction: insufficient funds for l1Fee + l2Fee + value"})]}),"\n"]}),"\n",(0,i.jsx)(t.p,{children:"You'll get this error when attempting to send a transaction and you don't have enough ETH to pay for the value of the transaction, the L2 execution fee, and the L1 data fee.\nYou might get this error when attempting to send max ETH if you aren't properly accounting for both the L2 execution fee and the L1 data fee."}),"\n",(0,i.jsx)(t.h3,{id:"gas-price-too-low",children:"Gas price too low"}),"\n",(0,i.jsxs)(t.ul,{children:["\n",(0,i.jsxs)(t.li,{children:["Error code: ",(0,i.jsx)(t.code,{children:"-32000"})]}),"\n",(0,i.jsxs)(t.li,{children:["Error message: ",(0,i.jsx)(t.code,{children:"gas price too low: X wei, use at least tx.gasPrice = Y wei"})]}),"\n"]}),"\n",(0,i.jsxs)(t.p,{children:["This is a custom RPC error that Morph returns when a transaction is rejected because the gas price is too low.\nSee the section on ",(0,i.jsx)(t.a,{href:"#responding-to-gas-price-updates",children:"Responding to gas price updates"})," for more information."]}),"\n",(0,i.jsx)(t.h3,{id:"gas-price-too-high",children:"Gas price too high"}),"\n",(0,i.jsxs)(t.ul,{children:["\n",(0,i.jsxs)(t.li,{children:["Error code: ",(0,i.jsx)(t.code,{children:"-32000"})]}),"\n",(0,i.jsxs)(t.li,{children:["Error message: ",(0,i.jsx)(t.code,{children:"gas price too high: X wei, use at most tx.gasPrice = Y wei"})]}),"\n"]}),"\n",(0,i.jsx)(t.p,{children:"This is a custom RPC error that Morph returns when a transaction is rejected because the gas price is too high.\nWe include this as a safety measure to prevent users from accidentally sending a transaction with an extremely high L2 gas price."}),"\n",(0,i.jsxs)(t.p,{children:["See the section on ",(0,i.jsx)(t.a,{href:"#responding-to-gas-price-updates",children:"Responding to gas price updates"})," for more information."]})]})}function h(e={}){const{wrapper:t}={...(0,o.R)(),...e.components};return t?(0,i.jsx)(t,{...e,children:(0,i.jsx)(d,{...e})}):d(e)}},1582:(e,t,n)=>{n.d(t,{R:()=>r,x:()=>a});var i=n(758);const o={},s=i.createContext(o);function r(e){const t=i.useContext(s);return i.useMemo((function(){return"function"==typeof e?e(t):{...t,...e}}),[t,e])}function a(e){let t;return t=e.disableParentContext?"function"==typeof e.components?e.components(o):e.components||o:r(e.components),i.createElement(s.Provider,{value:t},e.children)}}}]);