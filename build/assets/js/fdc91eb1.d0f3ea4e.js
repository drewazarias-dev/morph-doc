"use strict";(self.webpackChunkmorph_doc=self.webpackChunkmorph_doc||[]).push([[4908],{5118:(e,n,r)=>{r.r(n),r.d(n,{assets:()=>d,contentTitle:()=>c,default:()=>a,frontMatter:()=>o,metadata:()=>s,toc:()=>l});var i=r(6070),t=r(1582);const o={title:"Difference between Morph and Ethereum",lang:"en-US",keywords:["morph","ethereum","rollup","layer2","validity proof","optimistic zk-rollup"],description:"Upgrade your blockchain experience with Morph - the secure decentralized, cost0efficient, and high-performing optimistic zk-rollup solution. Try it now!"},c=void 0,s={id:"how-morph-works/general-protocol-design/difference-between-ethereum-and-morph",title:"Difference between Morph and Ethereum",description:"Upgrade your blockchain experience with Morph - the secure decentralized, cost0efficient, and high-performing optimistic zk-rollup solution. Try it now!",source:"@site/docs/how-morph-works/general-protocol-design/5-difference-between-ethereum-and-morph.md",sourceDirName:"how-morph-works/general-protocol-design",slug:"/how-morph-works/general-protocol-design/difference-between-ethereum-and-morph",permalink:"/docs/how-morph-works/general-protocol-design/difference-between-ethereum-and-morph",draft:!1,unlisted:!1,editUrl:"https://github.com/morph-l2/morph-doc/tree/main/docs/how-morph-works/general-protocol-design/5-difference-between-ethereum-and-morph.md",tags:[],version:"current",sidebarPosition:5,frontMatter:{title:"Difference between Morph and Ethereum",lang:"en-US",keywords:["morph","ethereum","rollup","layer2","validity proof","optimistic zk-rollup"],description:"Upgrade your blockchain experience with Morph - the secure decentralized, cost0efficient, and high-performing optimistic zk-rollup solution. Try it now!"},sidebar:"DeveloperSidebar",previous:{title:"Transactions Life Cycle",permalink:"/docs/how-morph-works/general-protocol-design/transactions-life-cycle"},next:{title:"Understand Transaction Cost on Morph",permalink:"/docs/build-on-morph/build-on-morph/understand-transaction-cost-on-morph"}},d={},l=[{value:"EVM Precompiles Difference",id:"evm-precompiles-difference",level:2},{value:"EVM Opcodes Difference",id:"evm-opcodes-difference",level:2},{value:"State Account Structure Difference",id:"state-account-structure-difference",level:2},{value:"<strong>Additional Fields</strong>",id:"additional-fields",level:3},{value:"<strong>CodeHash</strong>",id:"codehash",level:3},{value:"Block Time Difference",id:"block-time-difference",level:2}];function h(e){const n={a:"a",admonition:"admonition",code:"code",h2:"h2",h3:"h3",li:"li",p:"p",pre:"pre",strong:"strong",table:"table",tbody:"tbody",td:"td",th:"th",thead:"thead",tr:"tr",ul:"ul",...(0,t.R)(),...e.components};return(0,i.jsxs)(i.Fragment,{children:[(0,i.jsx)(n.p,{children:"There are several technical differences between Ethereum\u2019s EVM and Morph's optimistic zkEVM."}),"\n",(0,i.jsx)(n.p,{children:"We\u2019ve compiled a list to help you understand these distinctions better."}),"\n",(0,i.jsx)(n.p,{children:"For most Solidity developers, these technical details won't significantly impact your development experience."}),"\n",(0,i.jsx)(n.h2,{id:"evm-precompiles-difference",children:"EVM Precompiles Difference"}),"\n",(0,i.jsxs)(n.p,{children:["The ",(0,i.jsx)(n.code,{children:"RIPEMD-160"})," (address ",(0,i.jsx)(n.code,{children:"0x3"}),"), ",(0,i.jsx)(n.code,{children:"blake2f"})," (address ",(0,i.jsx)(n.code,{children:"0x9"}),"), and ",(0,i.jsx)(n.code,{children:"point evaluation"})," (address ",(0,i.jsx)(n.code,{children:"0x0a"}),") precompiles are currently unsupported. Calls to these unsupported precompiled contracts will result in a transaction revert."]}),"\n",(0,i.jsxs)(n.p,{children:["The ",(0,i.jsx)(n.code,{children:"modexp"})," precompile is supported, but it only accepts inputs that are 32 bytes or smaller (i.e., ",(0,i.jsx)(n.code,{children:"u256"}),")."]}),"\n",(0,i.jsxs)(n.p,{children:["The ",(0,i.jsx)(n.code,{children:"ecPairing"})," precompile is also supported; however, the maximum number of points (sets or pairs) is limited to 4, rather than 6."]}),"\n",(0,i.jsxs)(n.p,{children:["All other EVM precompiles are fully supported: ",(0,i.jsx)(n.code,{children:"ecRecover"}),", ",(0,i.jsx)(n.code,{children:"identity"}),", ",(0,i.jsx)(n.code,{children:"ecAdd"}),", and ",(0,i.jsx)(n.code,{children:"ecMul"}),"."]}),"\n",(0,i.jsx)(n.h2,{id:"evm-opcodes-difference",children:"EVM Opcodes Difference"}),"\n",(0,i.jsxs)(n.table,{children:[(0,i.jsx)(n.thead,{children:(0,i.jsxs)(n.tr,{children:[(0,i.jsx)(n.th,{children:"Opcode"}),(0,i.jsx)(n.th,{children:"Solidity equivalent"}),(0,i.jsx)(n.th,{children:"Morph Behavior"})]})}),(0,i.jsxs)(n.tbody,{children:[(0,i.jsxs)(n.tr,{children:[(0,i.jsx)(n.td,{children:(0,i.jsx)(n.code,{children:"BLOCKHASH"})}),(0,i.jsx)(n.td,{children:(0,i.jsx)(n.code,{children:"block.blockhash"})}),(0,i.jsxs)(n.td,{children:["Returns ",(0,i.jsx)(n.code,{children:"keccak(chain_id || block_number)"})," for the last 256 blocks."]})]}),(0,i.jsxs)(n.tr,{children:[(0,i.jsx)(n.td,{children:(0,i.jsx)(n.code,{children:"COINBASE"})}),(0,i.jsx)(n.td,{children:(0,i.jsx)(n.code,{children:"block.coinbase"})}),(0,i.jsxs)(n.td,{children:["Returns the pre-deployed fee vault contract address. See ",(0,i.jsx)(n.a,{href:"/docs/build-on-morph/developer-resources/contracts",children:"Contracts"})]})]}),(0,i.jsxs)(n.tr,{children:[(0,i.jsxs)(n.td,{children:[(0,i.jsx)(n.code,{children:"DIFFICULTY"})," / ",(0,i.jsx)(n.code,{children:"PREVRANDAO"})]}),(0,i.jsx)(n.td,{children:(0,i.jsx)(n.code,{children:"block.difficulty"})}),(0,i.jsx)(n.td,{children:"Returns 0."})]}),(0,i.jsxs)(n.tr,{children:[(0,i.jsx)(n.td,{children:(0,i.jsx)(n.code,{children:"SELFDESTRUCT"})}),(0,i.jsx)(n.td,{children:(0,i.jsx)(n.code,{children:"selfdestruct"})}),(0,i.jsx)(n.td,{children:"Disabled. If the opcode is triggered, the transaction will be reverted."})]}),(0,i.jsxs)(n.tr,{children:[(0,i.jsx)(n.td,{children:(0,i.jsx)(n.code,{children:"BLOBHASH"})}),(0,i.jsx)(n.td,{children:(0,i.jsx)(n.code,{children:"tx.blob_versioned_hashes[index]"})}),(0,i.jsx)(n.td,{children:"Not supported"})]}),(0,i.jsxs)(n.tr,{children:[(0,i.jsx)(n.td,{children:(0,i.jsx)(n.code,{children:"BLOBBASEFEE"})}),(0,i.jsx)(n.td,{children:(0,i.jsx)(n.code,{children:"blob_base_fee = BLOBBASEFEE()"})}),(0,i.jsx)(n.td,{children:"Not supported"})]})]})]}),"\n",(0,i.jsxs)(n.admonition,{title:"Several opcode not available",type:"tip",children:[(0,i.jsxs)(n.p,{children:[(0,i.jsx)(n.code,{children:"BLOBHASH"})," and ",(0,i.jsx)(n.code,{children:"BLOBBASEFEE"})," are not supported on Morph yet."]}),(0,i.jsxs)(n.p,{children:[(0,i.jsx)(n.a,{href:"https://eips.ethereum.org/EIPS/eip-4788",children:"EIP-4788"})," for accessing the Beacon Chain block root is not supported too."]})]}),"\n",(0,i.jsx)(n.h2,{id:"state-account-structure-difference",children:"State Account Structure Difference"}),"\n",(0,i.jsx)(n.h3,{id:"additional-fields",children:(0,i.jsx)(n.strong,{children:"Additional Fields"})}),"\n",(0,i.jsxs)(n.p,{children:["There are two additional fields in the existing ",(0,i.jsx)(n.code,{children:"StateAccount"})," object: ",(0,i.jsx)(n.code,{children:"PoseidonCodehash"})," and ",(0,i.jsx)(n.code,{children:"CodeSize"}),"."]}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-go",children:"type StateAccount struct {\n\tNonce    uint64\n\tBalance  *big.Int\n\tRoot     common.Hash // merkle root of the storage trie\n\tKeccakCodeHash []byte // still the Keccak codehash\n\t// added fields\n\tPoseidonCodeHash []byte // the Poseidon codehash\n\tCodeSize uint64\n}\n"})}),"\n",(0,i.jsx)(n.h3,{id:"codehash",children:(0,i.jsx)(n.strong,{children:"CodeHash"})}),"\n",(0,i.jsxs)(n.p,{children:["In this context, we keep two varieties of code hashes for each contract's bytecode: the ",(0,i.jsx)(n.code,{children:"Keccak hash"})," and the ",(0,i.jsx)(n.code,{children:"Poseidon hash"}),"."]}),"\n",(0,i.jsxs)(n.p,{children:["The ",(0,i.jsx)(n.code,{children:"KeccakCodeHash"})," is preserved to ensure compatibility with ",(0,i.jsx)(n.code,{children:"EXTCODEHASH"}),", while the ",(0,i.jsx)(n.code,{children:"PoseidonCodeHash"})," is utilized for verifying the accuracy of bytecodes loaded in the zkEVM, as Poseidon hashing offers significantly greater efficiency."]}),"\n",(0,i.jsx)(n.h2,{id:"block-time-difference",children:"Block Time Difference"}),"\n",(0,i.jsx)(n.admonition,{title:"Block Time Subject to Change",type:"tip",children:(0,i.jsx)(n.p,{children:"Blocks are produced every second, with an empty block generated if there are no transactions for 5 seconds. However, this frequency may change in the future."})}),"\n",(0,i.jsx)(n.p,{children:"To compare, Ethereum has a block time of ~12 seconds."}),"\n",(0,i.jsx)(n.p,{children:"Reasons for Faster Block Time in Morph"}),"\n",(0,i.jsx)(n.p,{children:"User Experience:"}),"\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsxs)(n.li,{children:["\n",(0,i.jsx)(n.p,{children:"A faster, consistent block time provides quicker feedback, enhancing the user experience."}),"\n"]}),"\n",(0,i.jsxs)(n.li,{children:["\n",(0,i.jsx)(n.p,{children:"Optimization: As we refine the zkEVM circuits in our testnets, we can achieve higher throughput than Ethereum, even with a smaller gas limit per block or batch."}),"\n"]}),"\n"]}),"\n",(0,i.jsx)(n.p,{children:"Notice:"}),"\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.code,{children:"TIMESTAMP"})," will return the timestamp of the block. It will update every second."]}),"\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.code,{children:"BLOCKNUMBER"})," will return an actual block number. It will update every second. The one-to-one mapping between blocks and transactions will no longer apply."]}),"\n"]})]})}function a(e={}){const{wrapper:n}={...(0,t.R)(),...e.components};return n?(0,i.jsx)(n,{...e,children:(0,i.jsx)(h,{...e})}):h(e)}},1582:(e,n,r)=>{r.d(n,{R:()=>c,x:()=>s});var i=r(758);const t={},o=i.createContext(t);function c(e){const n=i.useContext(o);return i.useMemo((function(){return"function"==typeof e?e(n):{...n,...e}}),[n,e])}function s(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(t):e.components||t:c(e.components),i.createElement(o.Provider,{value:n},e.children)}}}]);