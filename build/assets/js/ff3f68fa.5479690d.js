"use strict";(self.webpackChunkmorph_doc=self.webpackChunkmorph_doc||[]).push([[8221],{3920:(e,n,o)=>{o.r(n),o.d(n,{assets:()=>c,contentTitle:()=>d,default:()=>l,frontMatter:()=>s,metadata:()=>i,toc:()=>a});var t=o(6070),r=o(1582);const s={title:"Run a full node with docker",lang:"en-US"},d=void 0,i={id:"build-on-morph/developer-resources/node-operation/full-node/run-in-docker",title:"Run a full node with docker",description:"This guide will help you start a full node running in the docker container using run-morph-node",source:"@site/docs/build-on-morph/developer-resources/node-operation/full-node/1-run-in-docker.md",sourceDirName:"build-on-morph/developer-resources/node-operation/full-node",slug:"/build-on-morph/developer-resources/node-operation/full-node/run-in-docker",permalink:"/docs/build-on-morph/developer-resources/node-operation/full-node/run-in-docker",draft:!1,unlisted:!1,editUrl:"https://github.com/morph-l2/morph-doc/tree/main/docs/build-on-morph/developer-resources/node-operation/full-node/1-run-in-docker.md",tags:[],version:"current",sidebarPosition:1,frontMatter:{title:"Run a full node with docker",lang:"en-US"},sidebar:"DeveloperSidebar",previous:{title:"Decentralized Naming Services",permalink:"/docs/build-on-morph/developer-resources/use-ecosystem-developer-tools/decentralized-naming-services"},next:{title:"Run a full node from source",permalink:"/docs/build-on-morph/developer-resources/node-operation/full-node/run-on-host"}},c={},a=[{value:"Quick Start",id:"quick-start",level:2},{value:"Advanced Usage",id:"advanced-usage",level:2},{value:"Customizing Data Directory",id:"customizing-data-directory",level:3},{value:"Customizing parameters",id:"customizing-parameters",level:3},{value:"Sync node from snapshot",id:"sync-node-from-snapshot",level:2},{value:"Clone the dockerfile repository",id:"clone-the-dockerfile-repository",level:3},{value:"Acquire the snapshot you need",id:"acquire-the-snapshot-you-need",level:3},{value:"Set up the snapshot data",id:"set-up-the-snapshot-data",level:3},{value:"4. Run the Node",id:"4-run-the-node",level:3}];function h(e){const n={a:"a",admonition:"admonition",code:"code",h2:"h2",h3:"h3",li:"li",ol:"ol",p:"p",pre:"pre",strong:"strong",ul:"ul",...(0,r.R)(),...e.components};return(0,t.jsxs)(t.Fragment,{children:[(0,t.jsxs)(n.p,{children:["This guide will help you start a full node running in the docker container using ",(0,t.jsx)(n.a,{href:"https://github.com/morph-l2/run-morph-node",children:"run-morph-node"})]}),"\n",(0,t.jsx)(n.h2,{id:"quick-start",children:"Quick Start"}),"\n",(0,t.jsx)(n.admonition,{type:"note",children:(0,t.jsxs)(n.p,{children:["The instructions outlined below detail the procedure for running a full node on the mainnet. To set up and operate a ",(0,t.jsx)(n.strong,{children:"Holesky node"}),", you need to follow the tutorial on ",(0,t.jsx)(n.a,{href:"#sync-node-from-snapshot",children:(0,t.jsx)(n.code,{children:"sync node from snapshot"})}),"."]})}),"\n",(0,t.jsxs)(n.ol,{children:["\n",(0,t.jsx)(n.li,{children:"Clone the dockerfile repository"}),"\n"]}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-bash",children:"git clone https://github.com/morph-l2/run-morph-node.git\n"})}),"\n",(0,t.jsxs)(n.ol,{start:"2",children:["\n",(0,t.jsx)(n.li,{children:"Run the following command"}),"\n"]}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-bash",children:"cd morph-node\nmake run-node\n"})}),"\n",(0,t.jsxs)(n.p,{children:["The command ",(0,t.jsx)(n.code,{children:"make run-node"})," takes the ",(0,t.jsx)(n.code,{children:"../mainnet"})," as your node's ",(0,t.jsx)(n.strong,{children:"Home"})," directory by default. There will be two folders in the ",(0,t.jsx)(n.strong,{children:"Home"})," directory named ",(0,t.jsx)(n.code,{children:"geth-data"})," and ",(0,t.jsx)(n.code,{children:"node-data"}),", serving as data directories for the execution client and consensus client of the morph ndoe, respectively."]}),"\n",(0,t.jsxs)(n.p,{children:["This command will also generate the ",(0,t.jsx)(n.code,{children:"secret-jwt.txt"})," file under ",(0,t.jsx)(n.strong,{children:"Home"})," directory for the authentication during RPC calls between the execution client and consensus client."]}),"\n",(0,t.jsx)(n.h2,{id:"advanced-usage",children:"Advanced Usage"}),"\n",(0,t.jsxs)(n.p,{children:["With the ",(0,t.jsx)(n.a,{href:"#quick-start",children:"Quick Start"})," guide above, you can quickly start a node using the default configuration files. However, we also support customizing the node's data directory and parameter settings."]}),"\n",(0,t.jsx)(n.h3,{id:"customizing-data-directory",children:"Customizing Data Directory"}),"\n",(0,t.jsxs)(n.p,{children:["The host directory paths that are mounted by the Docker container are specified in the ",(0,t.jsx)(n.code,{children:"morph-node/.env"})," file."]}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-js",metastring:'title="morph-node/.env"',children:"// HOME folder for morph node\nMORPH_HOME=../mainnet\n// Flag indicates the network for execution client.\nMORPH_FLAG=morph\n// Location of the jwt file for the authentication between clients\nJWT_SECRET_FILE=${MORPH_HOME}/jwt-secret.txt\n// The entrypoint shell script for start execution client  \nGETH_ENTRYPOINT_FILE=./entrypoint-geth.sh\n// The snapshot name for Morph node \nMAINNET_SNAPSHOT_NAME=snapshot-20241218-1\n\n......\n"})}),"\n",(0,t.jsx)(n.p,{children:"You have the flexibility to customize the directory paths as per your requirements."}),"\n",(0,t.jsxs)(n.p,{children:["Please note that if you have customized the ",(0,t.jsx)(n.strong,{children:"HOME"})," directory of your node, you need to copy the necessary configuration files to this directory. Specifically, you should copy the ",(0,t.jsx)(n.code,{children:"node-data"})," and ",(0,t.jsx)(n.code,{children:"geth-data"})," from ",(0,t.jsx)(n.code,{children:"./mainnet"})," to your ",(0,t.jsx)(n.strong,{children:"HOME"})," directory."]}),"\n",(0,t.jsx)(n.admonition,{type:"note",children:(0,t.jsxs)(n.p,{children:["For running a testnet node, the ",(0,t.jsx)(n.code,{children:"morph-node/.env_holesky"})," file should be used instead of the ",(0,t.jsx)(n.code,{children:"morph-node/.env"})," file."]})}),"\n",(0,t.jsx)(n.h3,{id:"customizing-parameters",children:"Customizing parameters"}),"\n",(0,t.jsxs)(n.p,{children:["The default configuration required for mainnet node startup is located in the ",(0,t.jsx)(n.code,{children:"./mainnet"})," directory, while the files under ",(0,t.jsx)(n.code,{children:"./holesky"})," directory is used for testnet node startup."]}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-javascript",children:"\u2514\u2500\u2500 mainnet\n    \u251c\u2500\u2500 geth-data\n    \u2502\xa0\xa0 \u2514\u2500\u2500 static-nodes.json\n    \u2514\u2500\u2500 node-data\n        \u251c\u2500\u2500 config\n        \u2502\xa0\xa0 \u251c\u2500\u2500 config.toml\n        \u2502\xa0\xa0 \u2514\u2500\u2500 genesis.json\n        \u2514\u2500\u2500 data\n\n// for testnet nodes\n\u2514\u2500\u2500 holesky\n    \u251c\u2500\u2500 geth-data\n    \u2502\xa0\xa0 \u2514\u2500\u2500 static-nodes.json\n    \u2514\u2500\u2500 node-data\n        \u251c\u2500\u2500 config\n        \u2502\xa0\xa0 \u251c\u2500\u2500 config.toml\n        \u2502\xa0\xa0 \u2514\u2500\u2500 genesis.json\n        \u2514\u2500\u2500 data\n"})}),"\n",(0,t.jsxs)(n.p,{children:["If you wish to modify the Geth startup command, you can do so by editing the ",(0,t.jsx)(n.code,{children:"./morph-node/entrypoint-geth.sh"})," file. For adjustments to the Tendermint-related configuration parameters, you should modify the ",(0,t.jsx)(n.code,{children:"node-data/config/config.toml"})," file."]}),"\n",(0,t.jsx)(n.h2,{id:"sync-node-from-snapshot",children:"Sync node from snapshot"}),"\n",(0,t.jsx)(n.p,{children:"We suggest starting your node sync from a snapshot to speed up the process of syncing your node to the latest state."}),"\n",(0,t.jsx)(n.h3,{id:"clone-the-dockerfile-repository",children:"Clone the dockerfile repository"}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-bash",children:"git clone https://github.com/morph-l2/run-morph-node.git\n"})}),"\n",(0,t.jsx)(n.h3,{id:"acquire-the-snapshot-you-need",children:"Acquire the snapshot you need"}),"\n",(0,t.jsxs)(n.p,{children:["The ",(0,t.jsx)(n.code,{children:"morph-node/.env"})," configuration file in the repository you just cloned is designed for setting up the Morph node on the mainnet. By default, it is pre-configured to use the latest snapshot."]}),"\n",(0,t.jsxs)(n.p,{children:["If you need a historical snapshot, you must manually update the ",(0,t.jsx)(n.strong,{children:"SNAPSHOT_NAME"})," in the ",(0,t.jsx)(n.code,{children:"morph-node/.env"})," file. (Note: For the ",(0,t.jsx)(n.strong,{children:"testnet"}),", the corresponding file is ",(0,t.jsx)(n.code,{children:"morph-node/.env_holesky"}),".)"]}),"\n",(0,t.jsxs)(n.ul,{children:["\n",(0,t.jsxs)(n.li,{children:["\n",(0,t.jsxs)(n.p,{children:[(0,t.jsx)(n.strong,{children:"Fetch historical snapshot(Optional)"}),":"]}),"\n",(0,t.jsxs)(n.p,{children:["The historical snapshots are recorded in ",(0,t.jsx)(n.a,{href:"https://github.com/morph-l2/run-morph-node?tab=readme-ov-file#snapshot-information",children:"snapshot-information"})]}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-js",children:"// ...\n\nMAINNET_SNAPSHOT_NAME={your expected snapshot name} \n\n// ...\n"})}),"\n"]}),"\n",(0,t.jsxs)(n.li,{children:["\n",(0,t.jsxs)(n.p,{children:[(0,t.jsx)(n.strong,{children:"Execute download and decompress the snapshot for your network"}),":"]}),"\n",(0,t.jsx)(n.p,{children:"Run the following command to download and decompress the snapshot for your network:"}),"\n",(0,t.jsxs)(n.p,{children:[(0,t.jsx)(n.strong,{children:"For mainnet"}),":"]}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{children:"cd ./morph-node\nmake download-and-decompress-mainnet-snapshot\n"})}),"\n",(0,t.jsxs)(n.p,{children:[(0,t.jsx)(n.strong,{children:"For testnet"}),":"]}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{children:"cd ./morph-node\nmake download-and-decompress-holesky-snapshot\n"})}),"\n",(0,t.jsx)(n.p,{children:"The command will assist you in downloading and decompressing the snapshot archive."}),"\n"]}),"\n"]}),"\n",(0,t.jsx)(n.h3,{id:"set-up-the-snapshot-data",children:"Set up the snapshot data"}),"\n",(0,t.jsxs)(n.p,{children:["After downloading, locate the snapshot by placing the decompressed data files in the correct directory specified by the ",(0,t.jsx)(n.strong,{children:"MORPH_HOME"})," path in your ",(0,t.jsx)(n.code,{children:".env"})," file. Ensure the data files align with the node's expected structure to allow seamless synchronization."]}),"\n",(0,t.jsxs)(n.p,{children:["For example, if the snapshot folder is named ",(0,t.jsx)(n.code,{children:"snapshot-20241218-1"}),","]}),"\n",(0,t.jsxs)(n.ul,{children:["\n",(0,t.jsxs)(n.li,{children:["move the directory ",(0,t.jsx)(n.code,{children:"snapshot-20241218-1/geth"})," to the ",(0,t.jsx)(n.code,{children:"${MORPH_HOME}/geth-data"})," directory"]}),"\n",(0,t.jsxs)(n.li,{children:["move the contents from ",(0,t.jsx)(n.code,{children:"snapshot-20241218-1/data"})," to the ",(0,t.jsx)(n.code,{children:"${NODE_DATA_DIR}/data"})," directory."]}),"\n"]}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{children:"mv ./morph-node/snapshot-20241218-1/geth ${MORPH_HOME}/geth-data\nmv ./morph-node/snapshot-20241218-1/data/* ${MORPH_HOME}/node-data/data\n"})}),"\n",(0,t.jsx)(n.p,{children:"The folder structure will be like"}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-javascript",children:"\u2514\u2500\u2500 ${MORPH_HOME}\n    \u251c\u2500\u2500 geth-data // data directory for geth\n    \u2502\xa0\xa0 \u2514\u2500\u2500 static-nodes.json\n    \u2502\xa0\xa0 \u2514\u2500\u2500 geth // directory from snapshot/geth   \n    \u2514\u2500\u2500 node-data // data directory for node\n        \u251c\u2500\u2500 config\n        \u2502\xa0\xa0 \u251c\u2500\u2500 config.toml\n        \u2502\xa0\xa0 \u2514\u2500\u2500 genesis.json\n        \u2514\u2500\u2500 data // data directory from snapshot/node\n"})}),"\n",(0,t.jsx)(n.h3,{id:"4-run-the-node",children:"4. Run the Node"}),"\n",(0,t.jsxs)(n.p,{children:["With the snapshot and configuration files ready, navigate to the ",(0,t.jsx)(n.code,{children:"morph-node"})," folder under your cloned repository, and start the node using the provided command"]}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{children:"make run-node\n"})}),"\n",(0,t.jsx)(n.p,{children:"For testnet, run"}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{children:"make run-holesky-node\n"})})]})}function l(e={}){const{wrapper:n}={...(0,r.R)(),...e.components};return n?(0,t.jsx)(n,{...e,children:(0,t.jsx)(h,{...e})}):h(e)}},1582:(e,n,o)=>{o.d(n,{R:()=>d,x:()=>i});var t=o(758);const r={},s=t.createContext(r);function d(e){const n=t.useContext(s);return t.useMemo((function(){return"function"==typeof e?e(n):{...n,...e}}),[n,e])}function i(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(r):e.components||r:d(e.components),t.createElement(s.Provider,{value:n},e.children)}}}]);