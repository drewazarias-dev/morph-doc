"use strict";(self.webpackChunkmorph_doc=self.webpackChunkmorph_doc||[]).push([[5991],{6540:(e,i,t)=>{t.r(i),t.d(i,{assets:()=>c,contentTitle:()=>s,default:()=>d,frontMatter:()=>o,metadata:()=>a,toc:()=>l});var r=t(6070),n=t(1582);const o={title:"Morph's Architecture",lang:"en-US",keywords:["morph","layer2","validity proof","optimistic zk-rollup"],description:"Upgrade your blockchain experience with Morph - the secure decentralized, cost0efficient, and high-performing optimistic zk-rollup solution. Try it now!"},s=void 0,a={id:"about-morph/morphs-architecture",title:"Morph's Architecture",description:"Upgrade your blockchain experience with Morph - the secure decentralized, cost0efficient, and high-performing optimistic zk-rollup solution. Try it now!",source:"@site/docs/about-morph/4-morphs-architecture.md",sourceDirName:"about-morph",slug:"/about-morph/morphs-architecture",permalink:"/docs/about-morph/morphs-architecture",draft:!1,unlisted:!1,editUrl:"https://github.com/morph-l2/morph-doc/tree/main/docs/about-morph/4-morphs-architecture.md",tags:[],version:"current",sidebarPosition:4,frontMatter:{title:"Morph's Architecture",lang:"en-US",keywords:["morph","layer2","validity proof","optimistic zk-rollup"],description:"Upgrade your blockchain experience with Morph - the secure decentralized, cost0efficient, and high-performing optimistic zk-rollup solution. Try it now!"},sidebar:"DeveloperSidebar",previous:{title:"The Technology Behind Morph",permalink:"/docs/about-morph/the-technology-behind-morph"},next:{title:"Morph's Vision and Mission",permalink:"/docs/about-morph/morphs-vision-and-mission"}},c={},l=[{value:"The Modular Approach in Layer 2",id:"the-modular-approach-in-layer-2",level:2},{value:"Independent yet Collaborative Functions",id:"independent-yet-collaborative-functions",level:2},{value:"Diverse Roles",id:"diverse-roles",level:2},{value:"Safety and Security",id:"safety-and-security",level:2},{value:"Open-Source Codebase:",id:"open-source-codebase",level:3},{value:"Sherlock Open-Source Audit Report:",id:"sherlock-open-source-audit-report",level:3},{value:"Trail of Bits Audit Report:",id:"trail-of-bits-audit-report",level:3},{value:"Audit Scope:",id:"audit-scope",level:3}];function h(e){const i={a:"a",admonition:"admonition",h2:"h2",h3:"h3",img:"img",li:"li",ol:"ol",p:"p",strong:"strong",ul:"ul",...(0,n.R)(),...e.components};return(0,r.jsxs)(r.Fragment,{children:[(0,r.jsx)(i.admonition,{type:"tip",children:(0,r.jsx)(i.p,{children:'This overview offers a concise introduction to Morph\u2019s rollup technology stack. For an in-depth understanding, please refer to the "How Morph Works" section of our documentation.'})}),"\n",(0,r.jsx)(i.p,{children:(0,r.jsx)(i.img,{alt:"Archi",src:t(7789).A+"",width:"3840",height:"2160"})}),"\n",(0,r.jsx)(i.h2,{id:"the-modular-approach-in-layer-2",children:"The Modular Approach in Layer 2"}),"\n",(0,r.jsx)(i.p,{children:"Traditionally, the concept of modularity has been applied to Layer 1 blockchains, segmenting them into distinct layers. At Morph, we've extended this modular philosophy to Layer 2, building our platform around this principle."}),"\n",(0,r.jsx)(i.p,{children:"In a typical Layer 1 blockchain, the architecture consists of four major layers:"}),"\n",(0,r.jsxs)(i.ul,{children:["\n",(0,r.jsx)(i.li,{children:"Consensus: The mechanism through which network agreement is achieved."}),"\n",(0,r.jsx)(i.li,{children:"Execution: Where transaction processing and smart contract operations occur."}),"\n",(0,r.jsx)(i.li,{children:"Settlement: The process of finalizing transactions."}),"\n",(0,r.jsx)(i.li,{children:"Data Availability: Ensuring that necessary information is accessible for validation."}),"\n"]}),"\n",(0,r.jsx)(i.p,{children:"In the context of Layer 2, Morph reinterprets these layers with unique functionalities:"}),"\n",(0,r.jsxs)(i.ul,{children:["\n",(0,r.jsxs)(i.li,{children:[(0,r.jsx)(i.strong,{children:"Consensus and Execution via Decentralized Sequencer Network"}),": At Morph, these functions are integrated and handled by our decentralized sequencer network. Sequencers orchestrate, process, and achieve consensus on Layer 2 transactions, forming the primary interface for user interactions."]}),"\n"]}),"\n",(0,r.jsx)(i.p,{children:(0,r.jsx)(i.img,{alt:"Archi",src:t(5928).A+"",width:"3840",height:"2160"})}),"\n",(0,r.jsxs)(i.ul,{children:["\n",(0,r.jsxs)(i.li,{children:[(0,r.jsx)(i.strong,{children:"Settlement with Optimistic zkEVM"}),": Settlement in Morph refers to the finalization of Layer 2 transactions at the Ethereum level. It involves the crucial step of validating Layer 2 states. Morph employs the optimistic zkEVM for this purpose, a hybrid approach blending the best of optimistic rollups and zk-rollups. Layer 2 states will be eventually finalized by a significantly shorter challenge period or if gets challenged, a corresponding zk-proof."]}),"\n"]}),"\n",(0,r.jsx)(i.p,{children:(0,r.jsx)(i.img,{alt:"Archi",src:t(8890).A+"",width:"1920",height:"1080"})}),"\n",(0,r.jsxs)(i.ul,{children:["\n",(0,r.jsxs)(i.li,{children:[(0,r.jsx)(i.strong,{children:"Data Availability through 'Rollup' Process"}),": This entails transferring essential Layer 2 data to Ethereum. In Morph, this is achieved through the 'Rollup' process, where a batch submitter compiles blocks into batches and submits them as Layer 1 transactions on Ethereum."]}),"\n"]}),"\n",(0,r.jsx)(i.p,{children:(0,r.jsx)(i.img,{alt:"Archi",src:t(1032).A+"",width:"1920",height:"1080"})}),"\n",(0,r.jsx)(i.h2,{id:"independent-yet-collaborative-functions",children:"Independent yet Collaborative Functions"}),"\n",(0,r.jsx)(i.p,{children:"Each of these major functions operates independently, facilitating asynchronous tasks and switchable implementations:"}),"\n",(0,r.jsxs)(i.ol,{children:["\n",(0,r.jsx)(i.li,{children:"Sequencer Network: Executes Layer 2 transactions and updates local state."}),"\n",(0,r.jsx)(i.li,{children:"Rollup Module: Transforms Layer 2 blocks into batches for submission to Layer 1."}),"\n",(0,r.jsx)(i.li,{children:"State Verification: Utilizes Layer 1 security to verify Layer 2 states under the optimistic zkEVM rules."}),"\n"]}),"\n",(0,r.jsx)(i.p,{children:"This modular architecture enhances flexibility, adaptability, and composability within the Morph ecosystem."}),"\n",(0,r.jsx)(i.h2,{id:"diverse-roles",children:"Diverse Roles"}),"\n",(0,r.jsx)(i.p,{children:"Morph\u2019s architecture is further defined by five pivotal roles: Sequencers, Validators, Nodes, Provers, and Layer 1 (Ethereum). Each role carries specific responsibilities and utilizes distinct components to fulfill its function, contributing to the seamless operation of the network."}),"\n",(0,r.jsxs)(i.p,{children:["For a deeper understanding of Morph\u2019s architecture, please visit our comprehensive ",(0,r.jsx)(i.a,{href:"/docs/build-on-morph/developer-navigation-page",children:"Developer Docs"}),"."]}),"\n",(0,r.jsx)(i.h2,{id:"safety-and-security",children:"Safety and Security"}),"\n",(0,r.jsx)(i.p,{children:"We place the highest priority on security and are committed to providing users with a safe and trustworthy environment. To achieve this, we\u2019ve implemented multiple measures, including making our codebase open-source, engaging leading third-party firms for audits, and continuously improving our systems to uphold the highest standards of transparency and security. Below are some specific efforts we\u2019ve undertaken:"}),"\n",(0,r.jsx)(i.h3,{id:"open-source-codebase",children:"Open-Source Codebase:"}),"\n",(0,r.jsx)(i.p,{children:"We\u2019re proud to make our codebase publicly available, inviting scrutiny and contributions from the community. You can review it at the following links:"}),"\n",(0,r.jsx)(i.p,{children:(0,r.jsx)(i.a,{href:"https://github.com/morph-l2/morph/tree/main/contracts",children:"Morph Contracts"})}),"\n",(0,r.jsx)(i.h3,{id:"sherlock-open-source-audit-report",children:"Sherlock Open-Source Audit Report:"}),"\n",(0,r.jsx)(i.p,{children:"We commissioned a comprehensive security audit from Sherlock, and the results are publicly available. You can view the detailed report here:"}),"\n",(0,r.jsx)(i.p,{children:(0,r.jsx)(i.a,{href:"https://audits.sherlock.xyz/dashboard/9b78b63a3eb0597e7ba60eec251b6888/confirm_issues",children:"Sherlock Open-Source Audit Report"})}),"\n",(0,r.jsx)(i.h3,{id:"trail-of-bits-audit-report",children:"Trail of Bits Audit Report:"}),"\n",(0,r.jsxs)(i.p,{children:["Additionally, we enlisted the renowned Trail of Bits team to conduct an in-depth audit of our codebase, including a review of implemented fixes. The ",(0,r.jsx)(i.a,{href:"https://github.com/morph-l2/audits/blob/main/tob/Morph%20-%20Comprehensive%20Report%20with%20Fix%20Review.pdf",children:"full report"})," is accessible."]}),"\n",(0,r.jsx)(i.h3,{id:"audit-scope",children:"Audit Scope:"}),"\n",(0,r.jsx)(i.p,{children:"The above audit reports cover the entirety of our codebase, including the bridge contract, ensuring that all critical components have undergone rigorous security assessments."}),"\n",(0,r.jsx)(i.p,{children:"We firmly believe that transparency and security are the cornerstones of trust. We will continue to collaborate with the community and professional organizations to elevate our security standards and provide users with peace of mind. If you have any questions or suggestions, feel free to reach out to us at any time!"})]})}function d(e={}){const{wrapper:i}={...(0,n.R)(),...e.components};return i?(0,r.jsx)(i,{...e,children:(0,r.jsx)(h,{...e})}):h(e)}},7789:(e,i,t)=>{t.d(i,{A:()=>r});const r=t.p+"assets/images/archi-d41d5b2f09000115cef0dfea3705b7aa.png"},1032:(e,i,t)=>{t.d(i,{A:()=>r});const r=t.p+"assets/images/rollup-768caf2d310d19ce9909d718badd44e5.png"},8890:(e,i,t)=>{t.d(i,{A:()=>r});const r=t.p+"assets/images/opzk-9ae9b91f62e5e1b9e4771ee2e441c2ba.png"},5928:(e,i,t)=>{t.d(i,{A:()=>r});const r=t.p+"assets/images/seq1-e90d0e983252714740968a8aaaca0dd8.png"},1582:(e,i,t)=>{t.d(i,{R:()=>s,x:()=>a});var r=t(758);const n={},o=r.createContext(n);function s(e){const i=r.useContext(o);return r.useMemo((function(){return"function"==typeof e?e(i):{...i,...e}}),[i,e])}function a(e){let i;return i=e.disableParentContext?"function"==typeof e.components?e.components(n):e.components||n:s(e.components),r.createElement(o.Provider,{value:i},e.children)}}}]);